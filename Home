import React, { useContext } from "react";
// import * as React from 'react';
import AppBar from "@mui/material/AppBar";
import Box from "@mui/material/Box";
import Toolbar from "@mui/material/Toolbar";
import IconButton from "@mui/material/IconButton";
import Typography from "@mui/material/Typography";
import Menu from "@mui/material/Menu";
import MenuIcon from "@mui/icons-material/Menu";
import Container from "@mui/material/Container";
import Avatar from "@mui/material/Avatar";
import Button from "@mui/material/Button";
import Tooltip from "@mui/material/Tooltip";
import MenuItem from "@mui/material/MenuItem";
import AdbIcon from "@mui/icons-material/Adb";
// import Form from './Form';
import { Link, NavLink, useNavigate } from "react-router-dom";
import { MyContext } from "./AuthProvider";
import { Logout } from "@mui/icons-material";
import {
  FormControl,
  InputLabel,
  ListItemIcon,
  Select,
  useTheme,
} from "@mui/material";
import Brightness4Icon from "@mui/icons-material/Brightness4";
import Brightness7Icon from "@mui/icons-material/Brightness7";
import { ColorModeContext } from "./ToggleColorMode";
import ControlledOpenSelect from "./ControlledOpenSelect";
import { useTranslation } from "react-i18next";
import i18next from "i18next";
import SearchBar from "./SearchBar";

const Home = () => {
  const [anchorElNav, setAnchorElNav] = React.useState(null);
  const [anchorElUser, setAnchorElUser] = React.useState(null);
  const theme = useTheme();
  const colorMode = React.useContext(ColorModeContext);
  // const { t } = useTranslation();
  const { t } = useTranslation();

  const pages = [t("Home"), t("About"), t("Contact")];
  const settings = [t("Logout")];
  const object = useContext(MyContext);

console.log("objewct ",object.userData);

  const naviget = useNavigate();
  const { name, setName } = React.useContext(MyContext);
  const [lang, setLang] = React.useState("");

  // const [open, setOpen] = React.useState(false);
  const { i18n } = useTranslation();

  const changeLanguage = (selectedLang) => {
    i18n.changeLanguage(selectedLang);
  };

  const handleChange = (event) => {
    // setLang(event.target.value);
    const selectedLang = event.target.value;
    setLang(selectedLang);
    changeLanguage(selectedLang);
  };
  // console.log("wertyuio", lang);
  const handleOpenNavMenu = (event) => {
    setAnchorElNav(event.currentTarget);
  };
  const handleOpenUserMenu = (event) => {
    setAnchorElUser(event.currentTarget);
  };

  const handleCloseNavMenu = () => {
    setAnchorElNav(null);
  };

  const handleCloseUserMenu = () => {
    setAnchorElUser(null);
  };

  const logOut = () => {
    object.setLoggedIn1(false);
    naviget("/");
  };

  return (
    <>
      <AppBar position="static" color="warning">
        <Container maxWidth="xl">
          <Toolbar disableGutters>
            <AdbIcon sx={{ display: { xs: "none", md: "flex" }, mr: 1 }} />
            <Typography
              variant="h6"
              noWrap
              component="a"
              href="#app-bar-with-responsive-menu"
              sx={{
                mr: 2,
                display: { xs: "none", md: "flex" },
                fontFamily: "monospace",
                fontWeight: 700,
                letterSpacing: ".3rem",
                color: "inherit",
                textDecoration: "none",
              }}
            >
              <Link to="/" style={{ textDecoration: "none" }} onClick={logOut}>
                {" "}
                {t('LOGO')}{" "}
              </Link>
            </Typography>
            <Box sx={{ flexGrow: 1, display: { xs: "flex", md: "none" } }}>
              <IconButton
                size="large"
                aria-label="account of current user"
                aria-controls="menu-appbar"
                aria-haspopup="true"
                onClick={handleOpenNavMenu}
                color="inherit"
              >
                <MenuIcon />
              </IconButton>
              <Menu
                id="menu-appbar"
                anchorEl={anchorElNav}
                anchorOrigin={{
                  vertical: "bottom",
                  horizontal: "left",
                }}
                keepMounted
                transformOrigin={{
                  vertical: "top",
                  horizontal: "left",
                }}
                open={Boolean(anchorElNav)}
                onClose={handleCloseNavMenu}
                sx={{
                  display: { xs: "block", md: "none" },
                }}
              >
                <Typography textAlign="center">
                      <Link
                        to={`/view`}
                        style={{ textDecoration: "none" }}
                        
                      >View
                        
                      </Link>
                      </Typography>

                {/* ----------------------------------- Search Bar ---------------------------------- */}
                <SearchBar data={object.setUserData} />

                {pages.map((page) => (
                  <MenuItem key={page} onClick={handleCloseNavMenu}>
                    <Typography textAlign="center">
                      <Link
                        to={`/`}
                        style={{ textDecoration: "none" }}
                        onClick={logOut}
                      >
                        {page}
                      </Link>
                    </Typography>
                  </MenuItem>
                ))}
              </Menu>
            </Box>
            <AdbIcon sx={{ display: { xs: "flex", md: "none" }, mr: 1 }} />
            <Typography
              variant="h5"
              noWrap
              component="a"
              href="#app-bar-with-responsive-menu"
              sx={{
                mr: 2,
                display: { xs: "flex", md: "none" },
                flexGrow: 1,
                fontFamily: "monospace",
                fontWeight: 700,
                letterSpacing: ".3rem",
                color: "inherit",
                textDecoration: "none",
              }}
            >
              {t('LOGO')}
            </Typography>
            <Box sx={{ flexGrow: 1, display: { xs: "none", md: "flex" } }}>
              {pages.map((page) => (
                <Link to={`/`}>
                  <Button
                    key={page}
                    onClick={handleCloseNavMenu}
                    sx={{ my: 2, color: "white", display: "block" }}
                    style={{ textDecoration: "none" }}
                  >
                    {page}
                  </Button>
                </Link>
                
              ))}
              {object.isLoggedIn1 ? <Link to={`/view`}>
                  <Button
                    // onClick={handleCloseNavMenu}
                    sx={{ my: 2, color: "white", display: "block" }}
                    style={{ textDecoration: "none" }}
                  >
                    view
                  </Button>
                </Link>:[]}
              
              {/* -------------------------------------------------Search bar------------------------- */}
              {object.isLoggedIn1? <SearchBar data={object.setUserData} /> : [] }

               
            </Box>
            
           
            {theme.palette.mode} mode
            <IconButton
              sx={{ ml: 1 }}
              onClick={colorMode.toggleColorMode}
              color="inherit"
            >
              {theme.palette.mode === "dark" ? (
                <Brightness7Icon />
              ) : (
                <Brightness4Icon />
              )}
            </IconButton>

           

            {object.isLoggedIn1 ? (
              <Box sx={{ flexGrow: 0 }}>
                <Tooltip title={object.name}>
                  

                  <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>
                    <Avatar
                      alt={object.name}
                      src="/static/images/avatar/2.jpg"
                    />
                  </IconButton>
                </Tooltip>
                <Menu
                  sx={{ mt: "45px" }}
                  id="menu-appbar"
                  anchorEl={anchorElUser}
                  anchorOrigin={{
                    vertical: "top",
                    horizontal: "right",
                  }}
                  keepMounted
                  transformOrigin={{
                    vertical: "top",
                    horizontal: "right",
                  }}
                  open={Boolean(anchorElUser)}
                  onClose={handleCloseUserMenu}
                >
                  {settings.map((setting) => (
                    <MenuItem onClick={logOut}>
                      <ListItemIcon>
                        <Logout fontSize="small" />
                      </ListItemIcon>
                     {t('Logout')}
                    </MenuItem>
                  ))}
                </Menu>
              </Box>
            ) : (
              []
            )}
            
            {/* <ControlledOpenSelect/> */}
            {/* --------------------------------------------------------Translet ---------------------------------- */}
            <FormControl sx={{ m: 1, minWidth: 120 }} size="small">
              <InputLabel id="demo-select-small-label">
                {t("Language")}
               </InputLabel> 
              <Select
                labelId="demo-select-small-label"
                id="demo-select-small"
                value={lang}
                label={t("Language")}
                onChange={handleChange}
              >
                <MenuItem
                  value='hi'
                  // onClick={() => changeLanguage('hi')}
                >
                  {t('hindi')}
                </MenuItem>
                <MenuItem
                  value='en'
                  // onClick={() => changeLanguage('en')}
                >
                  {t('english')}
                </MenuItem>
                <MenuItem
                  value='fr'
                  // onClick={() => changeLanguage('fr')}
                >
                  {t('France')}
                </MenuItem>
              </Select>
            </FormControl>

          </Toolbar>
        </Container>
      </AppBar>
    </>
  );
};

export default Home;
